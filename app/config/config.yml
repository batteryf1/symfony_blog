imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: ru

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Assetic Configuration
assetic:
    debug: '%kernel.debug%'
    use_controller: false
    bundles: []
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: '%kernel.root_dir%/Resources/java/compiler.jar'
        #yui_css:
        #    jar: '%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar'

# Doctrine Configuration
# app/config/config.yml
doctrine:
    dbal:
        default_connection:   default
        types:
            # A collection of custom types
            # Example
            some_custom_type:
                class:                Acme\HelloBundle\MyCustomType
                commented:            true
        # If defined, all the tables whose names match this regular expression are ignored
        # by the schema tool (in this example, any table name starting with `wp_`)
        #schema_filter:               "/^wp_/"

        connections:
            # A collection of different named connections (e.g. default, conn2, etc)
            default:
                dbname:               ~
                host:                 localhost
                port:                 ~
                user:                 root
                password:             ~
                charset:              ~
                path:                 ~
                memory:               ~

                # The unix socket to use for MySQL
                unix_socket:          ~

                # True to use as persistent connection for the ibm_db2 driver
                persistent:           ~

                # The protocol to use for the ibm_db2 driver (default to TCPIP if omitted)
                protocol:             ~

                # True to use dbname as service name instead of SID for Oracle
                service:              ~

                # The session mode to use for the oci8 driver
                sessionMode:          ~

                # True to use a pooled server with the oci8 driver
                pooled:               ~

                # Configuring MultipleActiveResultSets for the pdo_sqlsrv driver
                MultipleActiveResultSets:  ~
                driver:               pdo_mysql
                platform_service:     ~

                # the version of your database engine
                server_version:       ~

                # when true, queries are logged to a 'doctrine' monolog channel
                logging:              '%kernel.debug%'
                profiling:            '%kernel.debug%'
                driver_class:         ~
                wrapper_class:        ~
                # the DBAL keepSlave option
                keep_slave:           false
                options:
                    # an array of options
                    key:                  []
                mapping_types:
                    # an array of mapping types
                    name:                 []
                slaves:

                    # a collection of named slave connections (e.g. slave1, slave2)
                    slave1:
                        dbname:               ~
                        host:                 localhost
                        port:                 ~
                        user:                 root
                        password:             ~
                        charset:              ~
                        path:                 ~
                        memory:               ~

                        # The unix socket to use for MySQL
                        unix_socket:          ~

                        # True to use as persistent connection for the ibm_db2 driver
                        persistent:           ~

                        # The protocol to use for the ibm_db2 driver (default to TCPIP if omitted)
                        protocol:             ~

                        # True to use dbname as service name instead of SID for Oracle
                        service:              ~

                        # The session mode to use for the oci8 driver
                        sessionMode:          ~

                        # True to use a pooled server with the oci8 driver
                        pooled:               ~

                        # the version of your database engine
                        server_version:       ~

                        # Configuring MultipleActiveResultSets for the pdo_sqlsrv driver
                        MultipleActiveResultSets:  ~

    orm:
        default_entity_manager:  ~
        auto_generate_proxy_classes:  false
        proxy_dir:            '%kernel.cache_dir%/doctrine/orm/Proxies'
        proxy_namespace:      Proxies
        # search for the "ResolveTargetEntityListener" class for an article about this
        resolve_target_entities: []
        entity_managers:
            # A collection of different named entity managers (e.g. some_em, another_em)
            some_em:
                query_cache_driver:
                    type:                 array # Required
                    host:                 ~
                    port:                 ~
                    instance_class:       ~
                    class:                ~
                metadata_cache_driver:
                    type:                 array # Required
                    host:                 ~
                    port:                 ~
                    instance_class:       ~
                    class:                ~
                result_cache_driver:
                    type:                 array # Required
                    host:                 ~
                    port:                 ~
                    instance_class:       ~
                    class:                ~
                connection:           ~
                class_metadata_factory_name:  Doctrine\ORM\Mapping\ClassMetadataFactory
                default_repository_class:  Doctrine\ORM\EntityRepository
                auto_mapping:         false
                hydrators:

                    # An array of hydrator names
                    hydrator_name:                 []
                mappings:
                    # An array of mappings, which may be a bundle name or something else
                    mapping_name:
                        mapping:              true
                        type:                 ~
                        dir:                  ~
                        alias:                ~
                        prefix:               ~
                        is_bundle:            ~
                dql:
                    # a collection of string functions
                    string_functions:
                        # example
                        # test_string: Acme\HelloBundle\DQL\StringFunction

                    # a collection of numeric functions
                    numeric_functions:
                        # example
                        # test_numeric: Acme\HelloBundle\DQL\NumericFunction

                    # a collection of datetime functions
                    datetime_functions:
                        # example
                        # test_datetime: Acme\HelloBundle\DQL\DatetimeFunction

                # Register SQL Filters in the entity manager
                filters:
                    # An array of filters
                    some_filter:
                        class:                ~ # Required
                        enabled:              false

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }
